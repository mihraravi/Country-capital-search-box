{"ast":null,"code":"// src/SearchBar.js\nimport React,{useState,useEffect}from'react';import'./SearchBar.css';// Create a CSS file for styling\nimport jsonData from'./data.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchBar=()=>{const[searchTerm,setSearchTerm]=useState('');const[countries,setCountries]=useState([]);const[filteredCountries,setFilteredCountries]=useState([]);// Fetch countries data from the JSON URL\nuseEffect(()=>{const fetchCountries=async()=>{try{const data=jsonData;setCountries(data);}catch(error){console.error('Error fetching data:',error);}};fetchCountries();},[]);// Update filtered countries based on the search term\nuseEffect(()=>{if(searchTerm){const results=countries.filter(c=>{const nameMatch=c.country.toLowerCase().includes(searchTerm.toLowerCase());const capitalMatch=c.capital.toLowerCase().includes(searchTerm.toLowerCase());return nameMatch||capitalMatch;});setFilteredCountries(results);}else{setFilteredCountries([]);}},[searchTerm,countries]);return/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Country Search\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-input\",placeholder:\"Search by country or capital...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",children:filteredCountries.map(c1=>/*#__PURE__*/_jsxs(\"li\",{children:[searchTerm&&c1.country.toLowerCase().includes(searchTerm.toLowerCase())&&/*#__PURE__*/_jsx(\"strong\",{children:c1.country}),searchTerm&&c1.capital.toLowerCase().includes(searchTerm.toLowerCase())&&/*#__PURE__*/_jsx(\"span\",{children:c1.capital})]},c1))})]});};export default SearchBar;","map":{"version":3,"names":["React","useState","useEffect","jsonData","jsx","_jsx","jsxs","_jsxs","SearchBar","searchTerm","setSearchTerm","countries","setCountries","filteredCountries","setFilteredCountries","fetchCountries","data","error","console","results","filter","c","nameMatch","country","toLowerCase","includes","capitalMatch","capital","className","children","type","placeholder","value","onChange","e","target","map","c1"],"sources":["/Users/suryaprakashmishra/Desktop/country search/country-search/src/SearchBar.js"],"sourcesContent":["// src/SearchBar.js\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';  // Create a CSS file for styling\nimport jsonData from './data.json';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  // Fetch countries data from the JSON URL\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const data = jsonData;\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n\n  // Update filtered countries based on the search term\n  useEffect(() => {\n    if (searchTerm) {\n      const results = countries.filter((c) => {\n        const nameMatch = c.country.toLowerCase().includes(searchTerm.toLowerCase());\n        const capitalMatch = c.capital.toLowerCase().includes(searchTerm.toLowerCase());\n        return nameMatch || capitalMatch;\n      });\n      setFilteredCountries(results);\n    } else {\n      setFilteredCountries([]);\n    }\n  }, [searchTerm, countries]);\n\n  return (\n    <div className=\"search-container\">\n      <h1>Country Search</h1>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search by country or capital...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <ul className=\"suggestions-list\">\n        {filteredCountries.map((c1) => (\n          <li key={c1}>\n            {searchTerm && c1.country.toLowerCase().includes(searchTerm.toLowerCase()) && (\n              <strong>{c1.country}</strong>\n            )}\n            {searchTerm && c1.capital.toLowerCase().includes(searchTerm.toLowerCase()) && (\n              <span>{c1.capital}</span>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,iBAAiB,CAAG;AAC3B,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACY,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE9D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGb,QAAQ,CACrBS,YAAY,CAACI,IAAI,CAAC,CACpB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDF,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAb,SAAS,CAAC,IAAM,CACd,GAAIO,UAAU,CAAE,CACd,KAAM,CAAAU,OAAO,CAAGR,SAAS,CAACS,MAAM,CAAEC,CAAC,EAAK,CACtC,KAAM,CAAAC,SAAS,CAAGD,CAAC,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAAC,CAC5E,KAAM,CAAAE,YAAY,CAAGL,CAAC,CAACM,OAAO,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAAC,CAC/E,MAAO,CAAAF,SAAS,EAAII,YAAY,CAClC,CAAC,CAAC,CACFZ,oBAAoB,CAACK,OAAO,CAAC,CAC/B,CAAC,IAAM,CACLL,oBAAoB,CAAC,EAAE,CAAC,CAC1B,CACF,CAAC,CAAE,CAACL,UAAU,CAAEE,SAAS,CAAC,CAAC,CAE3B,mBACEJ,KAAA,QAAKqB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BxB,IAAA,OAAAwB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBxB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXF,SAAS,CAAC,cAAc,CACxBG,WAAW,CAAC,iCAAiC,CAC7CC,KAAK,CAAEvB,UAAW,CAClBwB,QAAQ,CAAGC,CAAC,EAAKxB,aAAa,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACF3B,IAAA,OAAIuB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC7BhB,iBAAiB,CAACuB,GAAG,CAAEC,EAAE,eACxB9B,KAAA,OAAAsB,QAAA,EACGpB,UAAU,EAAI4B,EAAE,CAACd,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAAC,eACxEnB,IAAA,WAAAwB,QAAA,CAASQ,EAAE,CAACd,OAAO,CAAS,CAC7B,CACAd,UAAU,EAAI4B,EAAE,CAACV,OAAO,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAAC,eACxEnB,IAAA,SAAAwB,QAAA,CAAOQ,EAAE,CAACV,OAAO,CAAO,CACzB,GANMU,EAOL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}