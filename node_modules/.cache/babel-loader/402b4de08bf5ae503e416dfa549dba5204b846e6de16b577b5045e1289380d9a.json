{"ast":null,"code":"var _jsxFileName = \"/Users/suryaprakashmishra/Desktop/country search/country-search/src/SearchBar.js\",\n  _s = $RefreshSig$();\n// src/SearchBar.js\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css'; // Create a CSS file for styling\nimport jsonData from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  // Fetch countries data from the JSON URL\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        //const response = await fetch('https://dpaste.com/79QXDY8TD/');\n        //const data = jsonData;\n        const response = await fetch('https://dpaste.com/79QXDY8TD');\n        const data = await response.json();\n        console.log(\"ritu\", data);\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n\n  // Update filtered countries based on the search term\n  useEffect(() => {\n    if (searchTerm) {\n      const results = countries.filter(c => c.country.toLowerCase().includes(searchTerm.toLowerCase()) || c.capital.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredCountries(results);\n    } else {\n      setFilteredCountries([]);\n    }\n  }, [searchTerm, countries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      placeholder: \"Search by country or capital...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-list\",\n      children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" - \", country.capital]\n      }, country.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"bIoiu7BE+piVyASo2svohuc+YXI=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsonData","jsxDEV","_jsxDEV","SearchBar","_s","searchTerm","setSearchTerm","countries","setCountries","filteredCountries","setFilteredCountries","fetchCountries","response","fetch","data","json","console","log","error","results","filter","c","country","toLowerCase","includes","capital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","name","_c","$RefreshReg$"],"sources":["/Users/suryaprakashmishra/Desktop/country search/country-search/src/SearchBar.js"],"sourcesContent":["// src/SearchBar.js\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';  // Create a CSS file for styling\nimport jsonData from './data.json';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  // Fetch countries data from the JSON URL\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        //const response = await fetch('https://dpaste.com/79QXDY8TD/');\n        //const data = jsonData;\n        const response = await fetch('https://dpaste.com/79QXDY8TD');\n        const data = await response.json();\n        console.log(\"ritu\",data);\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n\n  // Update filtered countries based on the search term\n  useEffect(() => {\n    if (searchTerm) {\n      const results = countries.filter((c) =>\n        c.country.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        c.capital.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredCountries(results);\n    } else {\n      setFilteredCountries([]);\n    }\n  }, [searchTerm, countries]);\n\n  return (\n    <div className=\"search-container\">\n      <h1>Country Search</h1>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search by country or capital...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <ul className=\"suggestions-list\">\n        {filteredCountries.map((country) => (\n          <li key={country.name}>\n            <strong>{country.name}</strong> - {country.capital}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}